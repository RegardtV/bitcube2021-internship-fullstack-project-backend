// <auto-generated />
using System;
using FullStack.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FullStack.Data.Migrations
{
    [DbContext(typeof(FullStackDbContext))]
    partial class FullStackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FullStack.Data.Entities.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("Adverts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 10,
                            Date = new DateTime(2020, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cozy and luxurious apartment ideal for newlyweds",
                            Header = "2 Bedroom Luxury Apartment",
                            Price = 1320000m,
                            ProvinceId = 5,
                            State = "Live",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityId = 3,
                            Date = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Has a big living room and nice view of the city...",
                            Header = "Large family house that sleeps 6",
                            Price = 2000000m,
                            ProvinceId = 2,
                            State = "Hidden",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityId = 6,
                            Date = new DateTime(2021, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "King Louis IV used to live here",
                            Header = "Mansion fit for a king",
                            Price = 11450000m,
                            ProvinceId = 3,
                            State = "Hidden",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FullStack.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "East London",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Port Elizabeth",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bloemfontein",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bethlehem",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Johannesburg",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Soweto",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Durban",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pietermaritzburg",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cape Town",
                            ProvinceId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Paarl",
                            ProvinceId = 5
                        });
                });

            modelBuilder.Entity("FullStack.Data.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Free State"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = 4,
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Western Cape"
                        });
                });

            modelBuilder.Entity("FullStack.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "regardtvisagie@gmail.com",
                            FirstName = "Regardt",
                            LastName = "Visagie",
                            Password = "Reg14061465"
                        });
                });

            modelBuilder.Entity("FullStack.Data.Entities.Advert", b =>
                {
                    b.HasOne("FullStack.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FullStack.Data.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FullStack.Data.Entities.User", "User")
                        .WithMany("Adverts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Province");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FullStack.Data.Entities.User", b =>
                {
                    b.Navigation("Adverts");
                });
#pragma warning restore 612, 618
        }
    }
}
